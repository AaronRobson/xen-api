(* -*- tuareg -*- *)
#require "unix"

let flags = function
| [] -> ""
| pkgs ->
  let cmd = "ocamlfind ocamlc -verbose" ^ (
    List.fold_left (fun acc pkg -> acc ^ " -package " ^ pkg) "" pkgs
  ) in
  let ic = Unix.open_process_in
    (cmd ^ " | grep -oEe '-ppx (\"([^\"\\]|\\.)+\"|\\w+)'")
  in
  let rec go ic acc =
    try go ic (acc ^ " " ^ input_line ic) with End_of_file -> close_in ic; acc
  in
  go ic ""

let rewriters = ["ppx_deriving_rpc"]

let () = Printf.ksprintf Jbuild_plugin.V1.send {|
(library
 ((name xapi_datamodel)
  (public_name xapi-datamodel)
  (modules (
   datamodel
   datamodel_utils
   datamodel_types
   dm_api
   escaping
   datamodel_values
   datamodel_schema
  ))
  (flags (:standard -bin-annot %s -warn-error +a-3-4-6-9-27-28-29))
  (libraries (
   xapi-database
   xapi-consts
   rpclib
   ppx_deriving_rpc
   stdext
   threads
   xml-light2
   http-svr
  ))
  (wrapped false)
 )
)

(executable
 ((name datamodel_main)
  (modules (
   datamodel_main
   dot_backend
   dtd_backend
   markdown_backend
  ))
  (libraries (
   xapi-datamodel
   mustache
  ))
 )
)
|} (flags rewriters)
